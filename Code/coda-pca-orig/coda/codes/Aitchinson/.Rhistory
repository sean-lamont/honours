hpd
512-121
hist(hpd)
hpd
y[y==hpd]
normalised_y[y==hpd]
normalised_y[normalised_y==hpd]
hpd_probs <- sorted_y[(index_hpd:length(sorted_y))]
which(normalised_y == hpd)
length(hpd)
length(normalised_y)
subset(normalised_y == hpd)
subset(normalised_y,normalised_y== hpd)
which(normalised_y %in% hpd)
which(normalised_y %in% hpd_probs)
which(hpd_probs, normalised_y )
match(hpd_probs, normalised_y)
match(normalised_y %in% hpd)
match(normalised_y %in% hpd)
normalised_y %in% hpd
normalised_y[normalised_y %in% hpd]
normalised_y %in% hpd
which(normalised_y %in% hpd)
dens$x[which(normalised_y %in% hpd)]
hist(dens$x[which(normalised_y %in% hpd)])
hist(dens$x)
hist(y_pred)
quantile(y_pred, c(0.125, 0.875))
hist(dens$x[which(normalised_y %in% hpd)])
hist(y_pred)
hist(dens$x[which(normalised_y %in% hpd)])
hist(y_pred)
var_recip <- rgamma(5000, 10, 2.5)
var <- 1/var_recip
theta_pred <- rnorm(5000, 4.1, sd = sqrt(var/20))
y_pred <- (0.31*rnorm(5000, theta_pred, sqrt(var))) + (0.46*rnorm(5000, 2*theta_pred, 2*sqrt(var))) + (0.23*rnorm(5000, 3*theta_pred, 3*sqrt(var)))
hist(y_pred)
quantile(y_pred, c(0.125, 0.875))
dens<-density(y_pred)
normalised_y <- dens$y/sum(dens$y)
sorted_y <- sort(normalised_y, decreasing = TRUE)
cumulative_y <- cumsum(sorted_y)
index_hpd <- length(cumulative_y[(1:length(cumulative_y))[cumulative_y <= 0.75]]) + 1
cumulative_y[index_hpd] > 0.75 & cumulative_y[index_hpd-1] <= 0.75
hpd_probs <- sorted_y[(index_hpd:length(sorted_y))]
hist(dens$x[which(normalised_y %in% hpd)])
hist(y_pred)
hist(dens$x[which(normalised_y %in% hpd)])
hpd_probs <- sorted_y[(index_hpd:length(sorted_y))]
hist(dens$x[which(normalised_y %in% hpd)])
hist(y_pred)
plot(dens$x, dens$y)
hpd_probs <- sorted_y[(1:index_hpd)]
var_recip <- rgamma(5000, 10, 2.5)
var <- 1/var_recip
theta_pred <- rnorm(5000, 4.1, sd = sqrt(var/20))
y_pred <- (0.31*rnorm(5000, theta_pred, sqrt(var))) + (0.46*rnorm(5000, 2*theta_pred, 2*sqrt(var))) + (0.23*rnorm(5000, 3*theta_pred, 3*sqrt(var)))
hist(y_pred)
quantile(y_pred, c(0.125, 0.875))
dens<-density(y_pred)
normalised_y <- dens$y/sum(dens$y)
sorted_y <- sort(normalised_y, decreasing = TRUE)
cumulative_y <- cumsum(sorted_y)
index_hpd <- length(cumulative_y[(1:length(cumulative_y))[cumulative_y <= 0.75]]) + 1
cumulative_y[index_hpd] > 0.75 & cumulative_y[index_hpd-1] <= 0.75
hpd_probs <- sorted_y[(1:index_hpd)]
hist(dens$x[which(normalised_y %in% hpd)])
hist(dens$x[which(normalised_y %in% hpd_probs)])
hist(y_pred)
plot(dens$x, dens$y)
hist(dens$x[which(normalised_y %in% hpd_probs)])
hist(y_pred)
hist(dens$x[which(normalised_y %in% hpd_probs)])
hist(y_pred)
plot(dens$x, dens$y)
min(dens$x[which(normalised_y %in% hpd_probs)])
max(dens$x[which(normalised_y %in% hpd_probs)])
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
plot(lambda_prior)
x <- seq(0, 100, 0.1)
plot(x, lambda_prior)
x <- seq(0, 100, 1)
x <- seq(0, 1000, 1)
x <- seq(0.1, 100, 0.1)
plot(x, lambda_prior)
dens(lambda_prior)
density(lambda_prior)
den <- density(lambda_prior)
plot(den$x, den$y)
hist(lambda_prior)
hist(lambda_prior, breaks = 100)
hist(lambda_prior, breaks = 1000)
hist(lambda_prior, breaks = 100)
plot(den$x, den$y)
hist(lambda_prior, breaks = 100)
plot(den$x, den$y)
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
plot(den_post$x, den_post$y)
plot(den$x, den$y)
plot(den_post$x, den_post$y)
x <- seq(0.1, 100, 0.1)
plot(den_post$x, den_post$y, type = "l")
lines(den$x, den$y, type = "l")
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"))
plot(den_post$x, den_post$y, type = "l")
lines(den$x, den$y, type = "l", )
lines(den$x, den$y, type = "l" )
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"))
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"))
legend(1, 1, legend=c("Line 1", "Line 2"),
col=c("red", "blue"))
legend(1, 95, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
locator()
legend(0, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(1, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(100, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(100, 640, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(100, 640, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
locator()
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(1, 640, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(0, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
locator()
legend(0.0017, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(0.017, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.017, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(0.001, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(0.0009, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
legend(0.0007, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Line 1", "Line 2"),
col=c("red", "blue"), lty=1:2, cex=0.8)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
sum(den_post$y > 0.005)/length(den_post$y)
sum(den_post$x > 0.005)/length(den_post$y)
den <- density(lambda_prior, 2056)
plot(den$x, den$y)
plot(den$x, den$y, type = "l")
sum(den_post$ > 0.005)/length(den_post$y)
sum(den_post$x > 0.005)/length(den_post$y)
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
den <- density(lambda_prior)
plot(den$x, den$y)
plot(den$x, den$y, type = "l")
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
sum(den_post$x > 0.005)/length(den_post$y)
sum(den_post$x < 0.005)/length(den_post$y)
sum(den_post$x > 0.005)/length(den_post$y)
sum(lambda_post > 0.005)/length(den_post$y)
sum(lambda_post > 0.005)/length(lambda_post)
sum(lambda_post > 0.003)/length(lambda_post)
sum(lambda_post > 0.002)/length(lambda_post)
den_post$x
sum(den_post$x > 0.005)/length(den_post$y)
sum(den_post$x > 0.004)/length(den_post$y)
sum(den_post$x > 0.003)/length(den_post$y)
sum(den_post$x > 0.002)/length(den_post$y)
sum(den_post$x > 0.001)/length(den_post$y)
sum(den_post$x > 0.0015)/length(den_post$y)
sum(den_post$x > 0.005)/length(den_post$y)
sum(lambda_post > 0.005)/length(lambda_post)
sum(abs(lambda_post - expert_1_data) > abs(lambda_post - expert_2_data))
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 11, rate = 1000)
sum(abs(lambda_post - expert_1_data) > abs(lambda_post - expert_2_data))
sum(abs(lambda_post - expert_1_data) > abs(lambda_post - expert_2_data))/1000
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
plot(expert_2_data)
hist(expert_2_data)
hist(expert_1_data)
hist(expert_2_data)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
y <- c(20, 20, 20, 21, 22)
y <- c(20, 20, 20, 21, 22)
y_bar <- mean(y)
sd <- sqrt(var(y))
var(y)
v <- sum((y-y_bar^2)/4
#Posterior distibution assuming rounded measurements are accurate:
#Q5
#a
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
den <- density(lambda_prior)
plot(den$x, den$y, type = "l")
#c
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
#plot:
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
#Get the empirical posterior probability lambda > 0.005
sum(lambda_post > 0.005)/length(lambda_post)
#d
#can do an empirical check: given the distribution of the experts E_1, E_2, we wish to find the probability
#that the posterior distribution is closer to E_1. This will be given by:
# P(|lambda - E_2| > |lambda - E_1|)
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
v <- sum((y-y_bar^2)/4
#Posterior distibution assuming rounded measurements are accurate:
#Q5
#a
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
den <- density(lambda_prior)
plot(den$x, den$y, type = "l")
#c
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
#plot:
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
#Get the empirical posterior probability lambda > 0.005
sum(lambda_post > 0.005)/length(lambda_post)
#d
#can do an empirical check: given the distribution of the experts E_1, E_2, we wish to find the probability
#that the posterior distribution is closer to E_1. This will be given by:
# P(|lambda - E_2| > |lambda - E_1|)
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
v <- sum((y-y_bar^2))/4
v <- sum((y-y_bar)^2)/4
y <- c(20, 20, 20, 21, 22)
y_bar <- mean(y)
v <- sum((y-y_bar)^2)/4
y <- c(20, 20, 20, 21, 22)
n <- 5
y_bar <- mean(y)
v <- sum((y-y_bar)^2)/n-1
v <- sum((y-y_bar)^2)/(n-1)
s <- sqrt(v)
post_mu <- rt(1000, n-1)
post_mu <- rt(1000, n-1) * (sqrt(s/sqrt(n))) + y_bar
post_sigma <- 1/rgamma(1000, 2, 1.6)
post_var <- 1/rgamma(1000, 2, 1.6)
post_var <- 1/(rgamma(1000, 2, 1.6))
y <- c(20, 20, 20, 21, 22)
n <- 5
y_bar <- mean(y)
v <- sum((y-y_bar)^2)/(n-1)
s <- sqrt(v)
post_mu <- rt(1000, n-1) * (sqrt(s/sqrt(n))) + y_bar
post_var <- 1/(rgamma(1000, 2, 1.6))
post_var <- 1/(rgamma(1000, (n-1)/2, ((n-1)*v)/2)
#Q5
#a
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
den <- density(lambda_prior)
plot(den$x, den$y, type = "l")
#c
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
#plot:
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
#Get the empirical posterior probability lambda > 0.005
sum(lambda_post > 0.005)/length(lambda_post)
#d
#can do an empirical check: given the distribution of the experts E_1, E_2, we wish to find the probability
#that the posterior distribution is closer to E_1. This will be given by:
# P(|lambda - E_2| > |lambda - E_1|)
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
post_var <- 1/(rgamma(1000, (n-1)/2, ((n-1)*v)/2))
post_var <- 1/(rgamma(1000, (n-1)/2, ((n-1)*v)/2))
mean(post_mu)
hist(post_mu, breaks = 100)
hist(post_var, breaks = 100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
mu_vals <- seq(10, 30, 500)
var_vals <- seq(0, 10, 500)
joint_dens <- outer(mu_vals, var_vals, post2, y)
post2 <- function(mu, s2, y){
dens <- 1
for (i in 1:length(y)) dens <- (1/s2) * (pnorm(y[i]+0.5,mu,sqrt(s2)) - pnorm(y[i]+0.5,mu,sqrt(s2)))
dens
}
joint_dens <- outer(mu_vals, var_vals, post2, y)
post2(1,1,y)
post2(20,1,y)
post2 <- function(mu, s2, y){
dens <- 1
for (i in 1:length(y)) dens <- (1/s2) * (pnorm(y[i]+0.5,mu,sqrt(s2)) - pnorm(y[i]-0.5,mu,sqrt(s2)))
dens
}
post2(20,1,y)
joint_dens <- outer(mu_vals, var_vals, post2, y)
View(joint_dens)
var_vals <- seq(0, 10, length=500)
mu_vals <- seq(10, 30, length=500)
joint_dens <- outer(mu_vals, var_vals, post2, y)
mu_vals <- seq(10, 30, length=100)
var_vals <- seq(0, 10, length=100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
View(joint_dens)
mu_vals <- seq(10, 30, length=100)
var_vals <- seq(0.1, 10, length=100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
mu_vals <- seq(10, 30, length=100)
var_vals <- seq(0.001, 10, length=100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
contour(mu_vals, var_vals, joint_dens)
contour(mu_vals, var_vals, joint_dens, levels=contours)
contour(mu_vals, var_vals, joint_dens, levels="contours")
contour(mu_vals, var_vals, joint_dens, levels="contours")
contour(mu_vals, var_vals, joint_dens)
mean(post_mu)
mu_vals <- seq(10, 30, length=100)
var_vals <- seq(0.001, 0.5, length=100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
contour(mu_vals, var_vals, joint_dens)
mu_vals <- seq(10, 30, length=100)
var_vals <- seq(0.001, 0.005, length=100)
joint_dens <- outer(mu_vals, var_vals, post2, y)
contour(mu_vals, var_vals, joint_dens)
View(joint_dens)
logposterior <- function(theta){
theta*5 - 8*(theta^2) -5*log(exp(theta) + 1)
}
lpl <- LearnBayes::laplace(logposterior, mode = 1)
m <- lpl$mode
v <- lpl$var[1]
samples <- rnorm(1000, mean = m,  sd = sqrt(v))
p_vals = exp(samples)/(exp(samples) + 1)
sum(p_vals>0.5)/1000
target<-function(theta){
exp(5*theta - 8*(theta^2)) / ((exp(theta) + 1)^5)
}
g<-function(theta){
dnorm(theta, mean = 0, sd = 0.25)
}
sum(p_vals_rejection>0.5)/10000
target<-function(theta){
exp(5*theta - 8*(theta^2)) / ((exp(theta) + 1)^5)
}
g<-function(theta){
dnorm(theta, mean = 0, sd = 0.25)
}
M<-1
iters<-10000
n.draws<-0
draws<-c()
while(n.draws<iters){
theta_c <- M * rnorm(1, 0, 0.25)
accept.prob <- target(theta_c)/(M*g(theta_c))
u <- runif(1,0,1)
if(accept.prob>=u){
draws <- c(draws,theta_c)
n.draws <- n.draws+1
}
}
p_vals_rejection = exp(draws)/(exp(draws) + 1)
sum(p_vals_rejection>0.5)/10000
var_recip <- rgamma(5000, 10, 2.5)
var <- 1/var_recip
theta_pred <- rnorm(5000, 4.1, sd = sqrt(var/20))
y_pred <- (0.31*rnorm(5000, theta_pred, sqrt(var))) + (0.46*rnorm(5000, 2*theta_pred, 2*sqrt(var))) + (0.23*rnorm(5000, 3*theta_pred, 3*sqrt(var)))
hist(y_pred)
quantile(y_pred, c(0.125, 0.875))
dens<-density(y_pred)
normalised_y <- dens$y/sum(dens$y)
sorted_y <- sort(normalised_y, decreasing = TRUE)
cumulative_y <- cumsum(sorted_y)
index_hpd <- length(cumulative_y[(1:length(cumulative_y))[cumulative_y <= 0.75]]) + 1
cumulative_y[index_hpd] > 0.75 & cumulative_y[index_hpd-1] <= 0.75
hpd_probs <- sorted_y[(1:index_hpd)]
min(dens$x[which(normalised_y %in% hpd_probs)])
max(dens$x[which(normalised_y %in% hpd_probs)])
hist(y_pred)
plot(dens$x, dens$y)
hist(y_pred)
min(dens$x[which(normalised_y %in% hpd_probs)])
max(dens$x[which(normalised_y %in% hpd_probs)])
min(dens$y[which(normalised_y %in% hpd_probs)])
index(min(dens$y[which(normalised_y %in% hpd_probs)]))
min(dens$y[which(normalised_y %in% hpd_probs)])
match(min(dens$y[which(normalised_y %in% hpd_probs)]), dens$x)
match(min(dens$y[which(normalised_y %in% hpd_probs)]), dens$y)
dens$x[327]
max(dens$x[which(normalised_y !%in% hpd_probs)])
min(dens$y[which(normalised_y %!in% hpd_probs)]), dens$y)
'%!in%' <- function(x,y)!('%in%'(x,y))
min(dens$y[which(normalised_y %!in% hpd_probs)]), dens$y)
min(dens$y[which(normalised_y %!in% hpd_probs)])
z_1 <-
#Q5
#a
lambda_prior <- 0.5*rgamma(1000, shape = 1.5, rate = 1000) + 0.5*rgamma(1000, shape = 7, rate = 1000)
den <- density(lambda_prior)
plot(den$x, den$y, type = "l")
plot(den$x, den$y, type = "l", xlab = "Lambda", ylab="Proportion/1000")
plot(den$x, den$y/1000, type = "l", xlab = "Lambda", ylab="Proportion/1000")
plot(den$x, den$y/1000, type = "l", xlab = "Lambda", ylab="Density")
plot(den$x, den$y/1000, type = "l", xlab = "Lambda", ylab="Density", main = "Prior Density of Lambda")
lambda_post <- 0.5*rgamma(1000, shape = 5.5, rate = 2767) + 0.5*rgamma(1000, shape = 11, rate = 2767)
den_post <- density(lambda_post)
plot(den_post$x, den_post$y, type = "l", col="red")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
sum(lambda_post > 0.005)/length(lambda_post)
plot(den_post$x, den_post$y, type = "l", col="red", xlab = "Lambda", ylab="Density", main = "Density of Posterior and Prior Lambda")
lines(den$x, den$y, type = "l", col="blue" )
legend(0.0007, 540, legend=c("Posterior Density", "Prior Density"),
col=c("red", "blue"), lty=1:2, cex=0.8)
sum(lambda_post > 0.005)/length(lambda_post)
sum(lambda_post > 0.005)/length(lambda_post)
expert_1_data <- rgamma(1000, shape = 1.5, rate = 1000)
expert_2_data <- rgamma(1000, shape = 7, rate = 1000)
sum(abs(lambda_post - expert_2_data) > abs(lambda_post - expert_1_data))/1000
x + 1
x <- rexp(10000, 1)
hist(x)
x <- rexp(1000000, 1)
hist(x)
setwd("C:/Users/Sean/Documents/Honours Project/Datasets/Aitchinson")
co <- read.csv(file = "raw.csv")
View(co)
co <- read.csv(file = "Data 1. Compositions of 25 specimens of hongite.csv")
View(co)
co <- read.csv(file = "Data 30, Household expenditures (HK$) on five commodity groups of 20 single men.csv")
View(co)
files <- list.files(path="path/to/dir", pattern="*.txt", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
t <- read.table(x, header=TRUE) # load file
# apply function
out <- function(t)
# write to file
write.table(out, "path/to/output", sep="\t", quote=FALSE, row.names=FALSE, col.names=TRUE)
})
files <- list.files(path="C:/Users/Sean/Documents/Honours Project/Datasets/Aitchinson", pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
t <- read.csv(x, header=TRUE) # load file
})
View(co)
for (i in 1:40){}
for (i in 1:40){print(i) }
for (i in 1:40){print(i) read.csv(file = files[i])}
for (i in 1:40){print(i); read.csv(file = files[i])}
for (i in 1:40){print(i); read.csv(file = files[i])}
for (i in 8:40){print(i); read.csv(file = files[i])}
read.csv(file = "Data 7. Proportions of supervisor's statements assigned to different categories.csv")
read.csv(file = "Data 6. Proportions of supervisor's statements assigned to different categories.csv")
files
for (i in 1:40){print(i) read.csv(file = files[i])}
for (i in 8:40){print(i); read.csv(file = files[i])}
for (i in 8:40){x <- read.csv(file = files[i]) ; print(x) }
clear
clear()
print(read.csv(files[1]))
files <- list.files(path="C:/Users/Sean/Documents/Honours Project/Datasets/Aitchinson", pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
t <- read.csv(x, header=TRUE) # load file
})
print(read.csv(files[1]))
print(read.csv("Data 1. Compositions of 25 specimens of hongite.csv"))
print(read.csv("Data 8. Household expenditures (HK$) on four commodity groups of 20 single men (M) and 20 single women (W).csv"))
x <- read.csv("Data 8. Household expenditures (HK$) on four commodity groups of 20 single men (M) and 20 single women (W).csv")
View(x)
